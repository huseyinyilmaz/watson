"""
Django settings for watson project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime
from os.path import expanduser


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')cnc2y5td3tpolwx=abjml-vu-cp+cvv3avfjpj4q=(*n*)6g8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # third party apps
    'django_extensions',
    # DRF
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    # INTERNAL APPS
    'accounts',
    'screenshots',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'watson.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'watson.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_ROOT = 'static'
STATIC_URL = '/static/'

##########################
# Accounts configuration #
##########################
AUTH_USER_MODEL = 'accounts.User'

##############################
# CORS HEADERS configuration #
##############################

CORS_ORIGIN_ALLOW_ALL = True

#################
# CELERY CONFIG #
#################
MINUTE = 60

# CELERY_BEAT_SCHEDULE = {
#     'sahibinden-fetch-realestate-urls': {
#         'task': 'sahibinden.tasks.fetch_realestate_list',
#         'schedule': datetime.timedelta(minutes=10)
#     },
# }

# CELERY_BROKER_URL = 'filesystem://'
# # CELERY_RESULT_BACKEND = 'file:///var/celery/results'
# broker_dir = '/tmp/watson/celery'
# CELERY_BROKER_URL = 'filesystem://'
# CELERY_BROKER_TRANSPORT_OPTIONS = {
#     "data_folder_in": os.path.join(broker_dir, "out"),
#     "data_folder_out": os.path.join(broker_dir, "out"),
#     "data_folder_processed": os.path.join(broker_dir, "processed"),
# }

# RESULT_PATH = os.path.join(broker_dir, "result")
# CELERY_RESULT_BACKEND = 'file://' + RESULT_PATH


# def ensure_dir(directory):
#     if not os.path.exists(directory):
#         os.makedirs(directory)


# ensure_dir(CELERY_BROKER_TRANSPORT_OPTIONS['data_folder_in'])
# ensure_dir(CELERY_BROKER_TRANSPORT_OPTIONS['data_folder_out'])
# ensure_dir(CELERY_BROKER_TRANSPORT_OPTIONS['data_folder_processed'])
# ensure_dir(RESULT_PATH)

CELERY_BROKER_URL = 'amqp://watson:watson@rabbitmq:5672/watsondev'
# CELERY_RESULT_BACKEND = 'amqp://watson:watson@rabbitmq:5672/watsondev'

#####################
# LOG CONFIGURATION #
#####################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(levelname)s %(name)s %(asctime)s %(module)s '
                       '%(process)d %(thread)d %(message)s')
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        # 'file': {
        #     'level': 'DEBUG',
        #     # 'class': 'logging.FileHandler',
        #     'class': 'logging.handlers.RotatingFileHandler',
        #     'formatter': 'simple',
        #     'filename': expanduser('~/logs/watson.log'),
        # },


    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
        'propagate': False,
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            # 'level': 'DEBUG',  # logs orm queries
            'level': 'INFO',
            'propagate': True,
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },

        'sentry.errors': {
            'level': 'DEBUG',
            'handlers': ['console'],
            'propagate': False,
        },
    }
}

#######################################
# Django Rest Framework configuration #
#######################################
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),

    'DEFAULT_PAGINATION_CLASS':
    'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
}

###################
# WATSON SETTINGS #
###################

SELENIUM_COMMAND_EXECUTER = 'http://selenium:4444/wd/hub'
